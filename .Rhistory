install.packages("RMySQL")
installed.packages("RMySQL")
installed.packages("RMySQL")
installed.packages("RMySQL")
installed.packages("RMySQL")
installed.packages("RMySQL")
R.version.string
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("R Programming")
install_course_zip("path/to/file/here/swirl_courses-master.zip", multi=TRUE,
which_course="R Programming")
install_course_zip("~/Downloads/swirl_courses-master.zip", multi=TRUE,
which_course="R Programming")
swirl()
info()
bye()
install.packages("sqldf")
install.packages("sqldf")
install.packages("gsubfn")
install.packages("sqldf")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
installed.packages(ggplot2)
installed.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet, BodyWeight)
par(mar=c(1,1,1,1))
par(mar=c(1,1,1,3))
xyplot(weight ~ Time | Diet, BodyWeight)
par(mar=c(1,1,1,5))
trellis.par.set(mar=c(1,2,3,4))
text(xlab="")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
history()
install_course_zip("~/Downloads/swirl_courses-master.zip", multi=TRUE,
which_course="Exploratory Data Analysis")
xyplot(weight ~ Time | Diet, BodyWeight)
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind,airquality)
xyplot(Ozone~Wind,airquality, col="red",pch=8 )
xyplot(Ozone~Wind,airquality, col="red",pch=8 , main="Big Applle Data")
xyplot(Ozone~Wind,airquality, pch=8, col="red", main="Big Applle Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout=c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout=c(5,1))
p <- xyplot(Ozone ~ Wind | Month, data = airquality)
p <- xyplot(Ozone ~ Wind, data = airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x | f, layout=c(2,1))
xyplot(y~x | f)
v1
v2
myedit("plot1.R")
pathtofile("plot1.R", local=TRUE)
pathtofile("plot1.R")
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("mylables.R")
myedit("myLables.R")
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat | color*cut, data=diamonds)
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
sample(colors())
sample(colors(),10)
bye()
library(swirl)
swirl()
library(swirl)
swirl()
library('ProjectTemplate')
installed.packages("ProjectTemplate")
install_course_zip("~/Downloads/swirl_courses-master.zip", multi=TRUE,
which_course="Reproducible Research")
install_course_zip("~/Downloads/swirl_courses-master.zip", multi=TRUE,
which_course="Statistical_Inference")
swirl()
install_course_zip("~/Downloads/swirl_courses-master.zip", multi=TRUE,
which_course="Regression_Models")
swirl()
head(pollution)
din(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(pp,color="blue")
boxplot(ppm, color="blue")
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col= "green")
rug(ppm)
low
high
hist(ppm, col= "green", breaks = 100)
rug(ppm)
hist(ppm, col= "green")
abline(v=12, lwd = 2)
abline(v=median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
bboxplot(pm25~region, data = pollution, col = "red")
boxplot(pm25~region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region = "east")
east <- subset(pollution, region == "east")
head(east)
hist(east, col = "green")
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
skip()
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow=c(1,2),mar=c(5,4,2,1))
west <- ssubset(pollution, region == "west")
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png,file = "geyserplot.png")
dev.off()
ppois(10,lambda=5*3)
library(swirl)
swirl()
setwd('~/R/Reproducible_research/RepData_PeerAssessment1/')
data <- read.csv("activity.csv")
summary(data)
head(data)
head(data, 50)
names(data)
myData <- read.csv("activity.csv")
rm(data)
myData <- read.csv("activity.csv")
summary(myData)
head(myData)
names(myData)
totals <- ddply(myData, "date", numcolwise(sum))
library(plyr)
totals <- ddply(myData, "date", numcolwise(sum))
View(totals)
totalsByDay <- ddply(myData, "date", numcolwise(sum))
rm totals
View(totalsByDay)
hist(totalsByDay$steps, col="green",ann=FALSE)
mean(totalsByDay$steps)
mean(totalsByDay$steps, na.rm = TRUE)
median(totalsByDay$steps, na.rm = TRUE)
The mean of the total number of steps taken per day is `r dataMean`, and the median is 'r dataMedian'
hist(sumByInterval$steps, col="green",ann=FALSE)
sumByInterval <- ddply(myData, "interval", numcolwise(sum))
hist(sumByInterval$steps, col="green",ann=FALSE)
View(sumByInterval)
sumByInterval <- ddply(myData, "interval", numcolwise(sum), na.rm = TRUE)
sumByInterval <- ddply(myData, "interval", na.rm = TRUE, numcolwise(sum))
View(sumByInterval)
summary(sumByInterval)
hist(sumByInterval$steps, col="green",ann=FALSE)
plot(sumByInterval$interval, sumByInterval$steps, col="green",ann=FALSE)
numOfdays <- length(totalsByDay)
numOfdays <- dim(totalsByDay)[1]
numOfdays
plot(sumByInterval$interval/numOfdays, sumByInterval$steps/numOfdays, col="green",ann=FALSE)
plot(sumByInterval$interval, sumByInterval$steps/numOfdays, col="green",ann=FALSE)
plot(sumByInterval$interval, sumByInterval$steps/numOfdays, type = "l",ann=FALSE)
plot(sumByInterval$interval, sumByInterval$steps/numOfdays, type = "l", col = "red", ann=FALSE)
plot(sumByInterval$interval, sumByInterval$steps/numOfdays, type = "l", col = "red", lwd = 2, ann=FALSE)
View(myData)
hist(totalsByDay$steps, col="green", ann=FALSE, breaks = 10)
hist(totalsByDay$steps, col="green", ann=FALSE, breaks = 20)
hist(totalsByDay$steps, col="green", ann=FALSE, breaks = 10)
